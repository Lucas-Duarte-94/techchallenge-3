version: '3.9'

services:
  # RabbitMQ - iniciado primeiro
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-server
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: 123456
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - microservices-network

  # Appointment Microservice
  appointment-service:
    build:
      context: ./appointment-microservice
      dockerfile: Dockerfile
    container_name: appointment-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: user
      RABBITMQ_PASSWORD: 123456
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - microservices-network

  # RabbitMQ Consumer Service
  rabbitmq-consumer:
    build:
      context: ./RabbitMQ-consumer
      dockerfile: Dockerfile
    container_name: rabbitmq-consumer-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: user
      RABBITMQ_PASSWORD: 123456
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge